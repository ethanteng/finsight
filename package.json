{
  "name": "finsight",
  "version": "1.0.0",
  "main": "index.js",
  "scripts": {
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:unit": "jest --testPathPattern=unit",
    "test:integration": "jest --config jest.integration.config.js",
    "test:integration:ci": "jest --config jest.integration.ci.config.js",
    "test:all": "npm run test:unit && npm run test:integration",
    "test:coverage:unit": "jest --coverage --testPathPattern=unit",
    "test:coverage:integration": "jest --config jest.integration.config.js --coverage",
    "test:coverage:all": "npm run test:coverage:unit && npm run test:coverage:integration",
    "test:integration:watch": "jest --config jest.integration.config.js --watch",
    "test:enhanced-market-context": "jest --testPathPattern='enhanced-market-context|scheduled-updates' --verbose",
    "test:enhanced-market-context:watch": "jest --testPathPattern='enhanced-market-context|scheduled-updates' --watch",
    "test:dual-data": "jest --testPathPattern='dual-data' --verbose",
    "test:dual-data:watch": "jest --testPathPattern='dual-data' --watch",
    "test:lint": "eslint src/ --ext .ts",
    "lint:fix": "eslint src/ --ext .ts --fix",
    "type-check": "tsc --noEmit",
    "postinstall": "if [ -n \"$DATABASE_URL\" ]; then npx prisma generate && npx prisma migrate deploy; else npx prisma generate; fi && npx tsc --project tsconfig.build.json --outDir dist",
    "prepare": "if [ -n \"$DATABASE_URL\" ]; then npx prisma generate && npx prisma migrate deploy; else npx prisma generate; fi && npx tsc --project tsconfig.build.json --outDir dist",
    "build": "npm install && npx prisma generate && npx prisma migrate deploy && npx tsc --project tsconfig.build.json --outDir dist",
    "build:backend": "NODE_OPTIONS='--max-old-space-size=4096' npx tsc --project tsconfig.build.json --outDir ./dist && echo 'TypeScript compilation completed' && ls -la dist/",
    "build:prisma": "prisma generate",
    "build:render": "NODE_OPTIONS='--max-old-space-size=2048' prisma generate && prisma migrate deploy && npm run build:backend && echo 'Build completed' && ls -la dist/ && echo 'Verifying index.js exists:' && ls -la dist/index.js",
    "build:deploy": "./deploy-build.sh",
    "start": "node dist/index.js || node ./dist/index.js || (echo 'Build failed, attempting to build now...' && npm run build:backend && node dist/index.js) || (echo 'Current directory:' && pwd && echo 'Directory contents:' && ls -la && echo 'Dist contents:' && ls -la dist/ && exit 1)",
    "dev:backend": "ts-node src/index.ts",
    "dev:backend:sandbox": "PLAID_MODE=sandbox ts-node src/index.ts",
    "dev:backend:production": "PLAID_MODE=production ts-node src/index.ts",
    "dev:frontend": "npm run dev --prefix frontend",
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:sandbox": "concurrently \"npm run dev:backend:sandbox\" \"npm run dev:frontend\"",
    "dev:production": "concurrently \"npm run dev:backend:production\" \"npm run dev:frontend\"",
    "test:token-scope": "node scripts/test-token-scope.js",
    "test:production-investments": "node scripts/test-production-investments.js",
    "check:access-tokens": "node scripts/check-access-tokens.js",
    "migrate:profiles-to-encryption": "node scripts/migrate-profiles-to-encryption.js"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "description": "",
  "devDependencies": {
    "@types/jest": "^29.5.12",
    "@types/node": "^24.1.0",
    "@types/supertest": "^6.0.2",
    "@typescript-eslint/eslint-plugin": "^7.3.1",
    "@typescript-eslint/parser": "^7.3.1",
    "concurrently": "^9.2.0",
    "eslint": "^8.57.0",
    "jest": "^29.7.0",
    "supertest": "^7.0.0",
    "ts-jest": "^29.1.2",
    "ts-node": "^10.9.2",
    "typescript": "^5.8.3"
  },
  "dependencies": {
    "@polygon.io/client-js": "^8.0.0",
    "@prisma/client": "^6.12.0",
    "@types/bcryptjs": "^2.4.6",
    "@types/cors": "^2.8.19",
    "@types/express": "^5.0.3",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/node-cron": "^3.0.11",
    "@types/nodemailer": "^6.4.17",
    "@types/stripe": "^8.0.416",
    "bcryptjs": "^3.0.2",
    "cors": "^2.8.5",
    "dotenv": "^17.2.1",
    "express": "^5.1.0",
    "jsonwebtoken": "^9.0.2",
    "node-cron": "^4.2.1",
    "nodemailer": "^7.0.5",
    "openai": "^5.10.2",
    "plaid": "^37.0.0",
    "prisma": "^6.12.0",
    "react-plaid-link": "^4.0.1",
    "resend": "^4.8.0",
    "stripe": "^18.4.0"
  }
}
